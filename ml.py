import io, inspect 
from .. import loader, utils 
 
 
@loader.tds 
class ModulesLinkMod(loader.Module): 
    """–°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–¥—É–ª—å""" 
    strings = {'name': 'ModulesLink'} 
 
    async def mlcmd(self, message): 
        """–í—ã–≤–µ—Å—Ç–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –º–æ–¥—É–ª—å""" 
        args = utils.get_args_raw(message) 
        if not args: 
            return await message.edit('–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.') 
 
        await message.edit('–ò—â–µ–º...') 
 
        try: 
            f = ' '.join([x.strings["name"] for x in self.allmodules.modules if args.lower() == x.strings["name"].lower()]) 
            r = inspect.getmodule(next(filter(lambda x: args.lower() == x.strings["name"].lower(), self.allmodules.modules))) 
 
            link = str(r).split('(')[1].split(')')[0] 
            if "http" not in link: 
                text = f"–ú–æ–¥—É–ª—å {f}:" 
            else: 
                text = f"<a href=\"{link}\">–°—Å—ã–ª–∫–∞</a> –Ω–∞ üá∫üá¶{f}: <code>{link}</code>" 
 
            out = io.BytesIO(r.__loader__.data) 
            out.name = f + ".py" 
            out.seek(0) 
 
            await message.respond(text, file=out) 
            await message.delete() 
        except: 
            return await message.edit("–ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –∏–º—è –º–æ–¥—É–ª—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö")
